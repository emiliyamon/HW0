Index: src/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.io.File;\r\nimport java.io.IOException;\r\nimport java.util.Random;\r\nimport java.util.Scanner;\r\n\r\npublic class Main {\r\n    public static Scanner scanner;\r\n    public static Random rnd;\r\n\r\n    public static void battleshipGame() {\r\n\r\n        String input, regex; // used for converting str to int array\r\n        int i, j; // index\r\n\r\n        System.out.println(\"Enter the board size\");\r\n        // correct format for input: \"nXm\" n rows and m cols\r\n        input = scanner.nextLine();\r\n\r\n        regex = \"X\"; // regex relevant for this input line\r\n        // send string to function to get int array\r\n        int[] boardSizeIntArray = stringToIntArray(input, regex);\r\n\r\n        int ROWS = boardSizeIntArray[0];\r\n        int COLS = boardSizeIntArray[1];\r\n\r\n        // building boards using function\r\n        char[][] playerGameBoard = new char[ROWS][COLS];\r\n        buildGameBoard(playerGameBoard);\r\n        char[][] playerGuessBoard = new char[ROWS][COLS];\r\n        buildGameBoard(playerGuessBoard);\r\n        char[][] computerGameBoard = new char[ROWS][COLS];\r\n        buildGameBoard(computerGameBoard);\r\n        char[][] computerGuessBoard = new char[ROWS][COLS];\r\n        buildGameBoard(computerGuessBoard);\r\n\r\n        // for keeping track of boats\r\n        int[][] playerBoatBoard = new int[ROWS][COLS];\r\n        buildBoatBoard(playerBoatBoard);\r\n        int[][] computerBoatBoard = new int[ROWS][COLS];\r\n        buildBoatBoard(computerBoatBoard);\r\n\r\n        System.out.println(\"Enter battleship sizes\");\r\n        String battleshipSizes = scanner.nextLine();\r\n        // \"n1Xs1...nkXsk\"\r\n\r\n        String[] battleshipSizesArray = battleshipSizes.split(\" \");\r\n        // array of [\"n1Xs1\",...,\"nkXsk\"]\r\n\r\n        String[][] battleshipStringArray = new String[battleshipSizesArray.length][2];\r\n        for (i = 0; i < battleshipStringArray.length; i++) {\r\n            battleshipStringArray[i] = battleshipSizesArray[i].split(\"X\");\r\n        }\r\n        // string matrix of [[\"n1\",\"s1\"],...,[\"nk\",\"sk\"]]\r\n\r\n        int[][] battleshipArray = new int[battleshipStringArray.length][battleshipStringArray[0].length];\r\n        for (i = 0; i < battleshipStringArray.length; i++) {\r\n            for (j = 0; j < battleshipStringArray[0].length; j++) {\r\n                battleshipArray[i][j] = Integer.parseInt(battleshipStringArray[i][j]);\r\n            }\r\n        }\r\n        // change the matrix from string matrix to integer matrix, called battleshipArray\r\n\r\n        // for keeping track of boats:\r\n        int numOfBoats = 0;\r\n        for (i = 0; i < battleshipArray.length; i++) {\r\n            numOfBoats = numOfBoats + battleshipArray[i][0];\r\n        }\r\n\r\n        int[] playerBoatArray = new int[numOfBoats];\r\n        int[] computerBoatArray = new int[numOfBoats];\r\n        int count;\r\n\r\n        System.out.println(\"Your current game board:\");\r\n        printGameBoard(playerGameBoard);\r\n\r\n        int X, Y, ORIENTATION, S, AMOUNT;\r\n        int[] locationOrientationArray = new int[3]; //למה זה מושחר? אולי כי בשורה 94 אנחנו מקבלים מערך של אינטים מהפונק' המרה שלנו, אז לא צריך להגדיר פה מערך אינטים חדש?\r\n\r\n        // filling player game board\r\n        for (i = 0; i < battleshipArray.length; i++) {\r\n\r\n            S = battleshipArray[i][1];\r\n            AMOUNT = battleshipArray[i][0];\r\n            count = 1;\r\n\r\n            System.out.println(\"Enter location and orientation for battleship of size \" + S);\r\n            input = scanner.nextLine();\r\n            // format \"x, y, orientation\"\r\n            regex = \", \";\r\n            // orientation 0 for horizontal, 1 for vertical\r\n            // horizontal size s from (x,y) to (x, y+s-1)\r\n            // vertical size s from (x,y) to (x+s-1, y)\r\n            // send string to function to get int array\r\n            locationOrientationArray = stringToIntArray(input, regex);\r\n\r\n\r\n            while (AMOUNT > 0) {\r\n                X = locationOrientationArray[0];\r\n                Y = locationOrientationArray[1];\r\n                ORIENTATION = locationOrientationArray[2];\r\n                boolean overlapTestResult = false;\r\n                boolean adjacentTestResult = false;\r\n\r\n                if (ORIENTATION != 0 && ORIENTATION != 1) {\r\n                    System.out.println(\"Illegal orientation, try again!\");\r\n                    input = scanner.nextLine();\r\n                    locationOrientationArray = stringToIntArray(input, regex);\r\n                    continue;\r\n                } else if (X < 0 || Y < 0) {\r\n                    System.out.println(\"Illegal tile, try again!\");\r\n                    input = scanner.nextLine();\r\n                    locationOrientationArray = stringToIntArray(input, regex);\r\n                    continue;\r\n                } else if (X >= ROWS || Y >= COLS) { //מאחר ומדובר במשבצת ההתחלה של הספינה, זה כן יהיה תקין במקרה שאורך הספינה הוא 1\r\n                    System.out.println(\"Illegal tile, try again!\");\r\n                    input = scanner.nextLine();\r\n                    locationOrientationArray = stringToIntArray(input, regex);\r\n                    continue;\r\n                } else if (ORIENTATION == 0 && (Y + S - 1) >= COLS) {\r\n                    System.out.println(\"Battleship exceeds the boundaries of the board, try again!\");\r\n                    input = scanner.nextLine();\r\n                    locationOrientationArray = stringToIntArray(input, regex);\r\n                    continue;\r\n                } else if (ORIENTATION == 1 && (X + S - 1) >= ROWS) {\r\n                    System.out.println(\"Battleship exceeds the boundaries of the board, try again!\");\r\n                    input = scanner.nextLine();\r\n                    locationOrientationArray = stringToIntArray(input, regex);\r\n                    continue;\r\n                }\r\n\r\n                overlapTestResult = overlapTest(X, Y, ORIENTATION, S, playerGameBoard); //checking if there's already ship there\r\n                adjacentTestResult = adjacentTest(X, Y, ORIENTATION, S, playerGameBoard); //checking if all around is clear\r\n\r\n                if (overlapTestResult) {\r\n                    System.out.println(\"Battleship overlaps another battleship, try again!\");\r\n                    input = scanner.nextLine();\r\n                    locationOrientationArray = stringToIntArray(input, regex);\r\n                    continue;\r\n                } else if (adjacentTestResult) {\r\n                    System.out.println(\"Adjacent battleship detected, try again!\");\r\n                    input = scanner.nextLine();\r\n                    locationOrientationArray = stringToIntArray(input, regex);\r\n                    continue;\r\n                }\r\n\r\n                fillGameBoard(playerGameBoard, X, Y, ORIENTATION, S);\r\n                fillBoatBoard(playerBoatBoard, X, Y, ORIENTATION, S, playerBoatArray, count);\r\n\r\n                System.out.println(\"Your current game board:\");\r\n                printGameBoard(playerGameBoard);\r\n\r\n                AMOUNT--;\r\n                count++;\r\n            }\r\n        }\r\n\r\n\r\n        // filling computer game board\r\n        for (i = 0; i < battleshipArray.length; i++) {\r\n            X = rnd.nextInt(ROWS);\r\n            Y = rnd.nextInt(COLS);\r\n            ORIENTATION = rnd.nextInt(2);\r\n            S = battleshipArray[i][1];\r\n            AMOUNT = battleshipArray[i][0];\r\n            count = 1;\r\n\r\n\r\n            // orientation 0 for horizontal, 1 for vertical\r\n            // horizontal size s from (x,y) to (x, y+s-1)\r\n            // vertical size s from (x,y) to (x+s-1, y)\r\n\r\n            while (AMOUNT > 0) {\r\n                boolean overlapTestResult = false;\r\n                boolean adjacentTestResult = false;\r\n\r\n                if (X >= ROWS || Y >= COLS) {\r\n                    X = rnd.nextInt(ROWS);\r\n                    Y = rnd.nextInt(COLS);\r\n                    ORIENTATION = rnd.nextInt(2);\r\n                    continue;\r\n                } else if (ORIENTATION == 0 && (Y + S - 1) >= COLS) {\r\n                    X = rnd.nextInt(ROWS);\r\n                    Y = rnd.nextInt(COLS);\r\n                    ORIENTATION = rnd.nextInt(2);\r\n                    continue;\r\n                } else if (ORIENTATION == 1 && (X + S - 1) >= ROWS) {\r\n                    X = rnd.nextInt(ROWS);\r\n                    Y = rnd.nextInt(COLS);\r\n                    ORIENTATION = rnd.nextInt(2);\r\n                    continue;\r\n                }\r\n\r\n                overlapTestResult = overlapTest(X, Y, ORIENTATION, S, computerGameBoard);\r\n                adjacentTestResult = adjacentTest(X, Y, ORIENTATION, S, computerGameBoard);\r\n\r\n                if (overlapTestResult) {\r\n                    X = rnd.nextInt(ROWS);\r\n                    Y = rnd.nextInt(COLS);\r\n                    ORIENTATION = rnd.nextInt(2);\r\n                    continue;\r\n                } else if (adjacentTestResult) {\r\n                    X = rnd.nextInt(ROWS);\r\n                    Y = rnd.nextInt(COLS);\r\n                    ORIENTATION = rnd.nextInt(2);\r\n                    continue;\r\n                }\r\n\r\n                fillGameBoard(computerGameBoard, X, Y, ORIENTATION, S);\r\n                fillBoatBoard(computerBoatBoard, X, Y, ORIENTATION, S, computerBoatArray, count);\r\n                AMOUNT--;\r\n                count++;\r\n            }\r\n        }\r\n\r\n        int rComputer = numOfBoats;\r\n        int rPlayer = numOfBoats;\r\n\r\n        while (rComputer != 0 && rPlayer != 0) {\r\n\r\n            // attacking - player round\r\n\r\n            System.out.println(\"Your current guessing board:\");\r\n            printGameBoard(playerGuessBoard);\r\n\r\n            System.out.println(\"Enter a tile to attack\");\r\n            input = scanner.nextLine();\r\n            int[] guessingTileIntArray = new int[2];\r\n\r\n            boolean flag = true;\r\n            int boatId;\r\n\r\n            while (flag) {\r\n                // send string to function to get int array\r\n                guessingTileIntArray = stringToIntArray(input, \", \");\r\n                // checking the input\r\n                X = guessingTileIntArray[0];\r\n                Y = guessingTileIntArray[1];\r\n\r\n                if (X >= ROWS || Y >= COLS) {\r\n                    System.out.println(\"Illegal tile, try again!\");\r\n                    input = scanner.nextLine();\r\n                } else if (X < 0 || Y < 0) {\r\n                    System.out.println(\"Illegal tile, try again!\");\r\n                    input = scanner.nextLine();\r\n                } else if (playerGuessBoard[X][Y] != '–') {\r\n                    System.out.println(\"Tile already attacked, try again!\");\r\n                    input = scanner.nextLine();\r\n                } else {\r\n                    flag = false;\r\n                }\r\n            }\r\n\r\n            // not sure if next two line are necessary, added because of an error message\r\n            X = guessingTileIntArray[0];\r\n            Y = guessingTileIntArray[1];\r\n\r\n            if (computerGameBoard[X][Y] == '–') {\r\n                System.out.println(\"That is a miss!\");\r\n                playerGuessBoard[X][Y] = 'X';\r\n            }\r\n            if (computerGameBoard[X][Y] == '#') {\r\n                System.out.println(\"That is a hit!\");\r\n                playerGuessBoard[X][Y] = 'V';\r\n                computerGameBoard[X][Y] = 'X';\r\n\r\n                boatId = computerBoatBoard[X][Y];\r\n                computerBoatArray[boatId - 1] = computerBoatArray[boatId - 1] - 1;\r\n\r\n                for (i = 0; i < computerBoatArray.length; i++) {\r\n                    if (computerBoatArray[i] == 0) {\r\n                        rComputer = (rComputer - 1);\r\n                        System.out.println(\"The computer's battleship has been drowned, \" + rComputer + \" more battleships to go!\");\r\n                        computerBoatArray[i] = -1;\r\n                    }\r\n                }\r\n                if (rComputer == 0) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n\r\n            // attacking - computer round\r\n            X = rnd.nextInt(ROWS);\r\n            Y = rnd.nextInt(COLS);\r\n            flag = true;\r\n\r\n            while (flag) {\r\n                if (computerGuessBoard[X][Y] != '–') {\r\n                    X = rnd.nextInt(ROWS);\r\n                    Y = rnd.nextInt(COLS);\r\n                } else {\r\n                    flag = false;\r\n                    System.out.println(\"The computer attacked (\" + X + \",\" + Y + \")\");\r\n                }\r\n            }\r\n\r\n            if (playerGameBoard[X][Y] == '–') {\r\n                System.out.println(\"That is a miss!\");\r\n                computerGuessBoard[X][Y] = 'X';\r\n            }\r\n            if (playerGameBoard[X][Y] == '#') {\r\n                System.out.println(\"That is a hit!\");\r\n                computerGuessBoard[X][Y] = 'V';\r\n                playerGameBoard[X][Y] = 'X';\r\n\r\n                boatId = playerBoatBoard[X][Y];\r\n                playerBoatArray[boatId - 1] = playerBoatArray[boatId - 1] - 1;\r\n                for (i = 0; i < playerBoatArray.length; i++) {\r\n                    if (playerBoatArray[i] == 0) {\r\n                        rPlayer = (rPlayer - 1);\r\n                        System.out.println(\"Your battleship has been drowned, you have left \" + rPlayer + \" more battleships!\");\r\n                        playerBoatArray[i] = -1;\r\n                    }\r\n                }\r\n                if (rPlayer == 0) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            System.out.println(\"Your current game board:\");\r\n            printGameBoard(playerGameBoard);\r\n\r\n        }\r\n\r\n\r\n        // determine the winner\r\n        if (rComputer == 0) {\r\n            System.out.println(\"You won the game!\");\r\n        } else {\r\n            System.out.println(\"You lost ):\");\r\n        }\r\n\r\n        // end of main battleship game\r\n    }\r\n\r\n    //זה דוקומינטציה תקינה מה שקורה מתחתיי?\r\n\r\n    /**\r\n     * Function for conversion of string to int array\r\n     *\r\n     * @param input - string input from the user\r\n     * @param regex - indication where to split the string\r\n     * @return - returns the int array\r\n     */\r\n    public static int[] stringToIntArray(String input, String regex) {\r\n        String[] stringArray = input.split(regex);\r\n        int[] intArray = new int[stringArray.length];\r\n        for (int i = 0; i < stringArray.length; i++) {\r\n            intArray[i] = Integer.parseInt(stringArray[i]);\r\n        }\r\n        return intArray;\r\n    }\r\n\r\n\r\n    /**\r\n     * Function for game and guess board building\r\n     *\r\n     * @param gameBoard - gets the relevant game board and fills it with the correct sign\r\n     */\r\n    public static void buildGameBoard(char[][] gameBoard) {\r\n        for (int i = 0; i < gameBoard.length; i++) {\r\n            for (int j = 0; j < gameBoard[0].length; j++) {\r\n                gameBoard[i][j] = '–';\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Function for keeping track board building\r\n     *\r\n     * @param boatBoard - gets the relevant game board and fills it with the numbers to indicate boat location\r\n     */\r\n    public static void buildBoatBoard(int[][] boatBoard) {\r\n        for (int i = 0; i < boatBoard.length; i++) {\r\n            for (int j = 0; j < boatBoard[0].length; j++) {\r\n                boatBoard[i][j] = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Function for checking overlapping battleships while filling board\r\n     *\r\n     * @param X               - x coordinate\r\n     * @param Y               - y coordinate\r\n     * @param ORIENTATION     - orientation 0 or 1\r\n     * @param S               - size of boat\r\n     * @param playerGameBoard - the game board to check in\r\n     * @return - true or false according to the test\r\n     */\r\n    public static boolean overlapTest(int X, int Y, int ORIENTATION, int S, char[][] playerGameBoard) {\r\n        char boatLocationMarker = '#';\r\n        boolean overlapTestResult = false;\r\n\r\n        switch (ORIENTATION) {\r\n            case 0:\r\n                for (int j = Y; j < Y + S; j++) {\r\n                    if (playerGameBoard[X][j] == boatLocationMarker) {\r\n                        overlapTestResult = true;\r\n                    }\r\n                }\r\n                break;\r\n            case 1:\r\n                for (int i = X; i < X + S; i++) {\r\n                    if (playerGameBoard[i][Y] == boatLocationMarker) {\r\n                        overlapTestResult = true;\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n        return overlapTestResult;\r\n    }\r\n\r\n    /**\r\n     * Function for checking adjacent battleships while filling board\r\n     *\r\n     * @param X               - x coordinate\r\n     * @param Y               - y coordinate\r\n     * @param ORIENTATION     - orientation 0 or 1\r\n     * @param S               - size of boat\r\n     * @param playerGameBoard - the game board to check in\r\n     * @return - true or false according to the test\r\n     */\r\n    public static boolean adjacentTest(int X, int Y, int ORIENTATION, int S, char[][] playerGameBoard) {\r\n        char boatLocation = '#';\r\n        switch (ORIENTATION) {\r\n            case 0:\r\n                for (int i = Math.max(0, X - 1); i <= Math.min(playerGameBoard.length - 1, X + 1); i++) {\r\n                    for (int j = Math.max(0, Y - 1); j <= Math.min(playerGameBoard[0].length - 1, Y + S); j++) {\r\n                        if (playerGameBoard[i][j] == boatLocation) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case 1:\r\n                for (int i = Math.max(0, X - 1); i <= Math.min(playerGameBoard.length - 1, X + S); i++) {\r\n                    for (int j = Math.max(0, Y - 1); j <= Math.min(playerGameBoard[0].length - 1, Y + 1); j++) {\r\n                        if (playerGameBoard[i][j] == boatLocation) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    /**\r\n     * function for filling the game board\r\n     *\r\n     * @param playerGameBoard- the game board to fill\r\n     * @param X                - x coordinate\r\n     * @param Y                - y coordinate\r\n     * @param ORIENTATION      - orientation 0 or 1\r\n     * @param S                - size of boat\r\n     */\r\n    public static void fillGameBoard(char[][] playerGameBoard, int X, int Y, int ORIENTATION, int S) {\r\n        char boatLocation = '#';\r\n        switch (ORIENTATION) {\r\n            case 0:\r\n                for (int j = Y; j <= Y + S - 1; j++) {\r\n                    playerGameBoard[X][j] = boatLocation;\r\n                }\r\n                break;\r\n            case 1:\r\n                for (int i = X; i <= X + S - 1; i++) {\r\n                    playerGameBoard[i][Y] = boatLocation;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * function for keeping track of battleships\r\n     *\r\n     * @param boatBoard   - relevant boat board\r\n     * @param X           - x coordinate\r\n     * @param Y           - y coordinate\r\n     * @param ORIENTATION - orientation 0 or 1\r\n     * @param S           - size of boat\r\n     * @param boatArray   - array of all boats of the player\r\n     * @param count       - number of boat\r\n     */\r\n    public static void fillBoatBoard(int[][] boatBoard, int X, int Y, int ORIENTATION, int S, int[] boatArray, int count) {\r\n        int boatLocationMarker = count; // count represents number of boat on the board\r\n        switch (ORIENTATION) {\r\n            case 0:\r\n                for (int j = Y; j <= Y + S - 1; j++) {\r\n                    boatBoard[X][j] = boatLocationMarker;\r\n                }\r\n                break;\r\n            case 1:\r\n                for (int i = X; i <= X + S - 1; i++) {\r\n                    boatBoard[i][Y] = boatLocationMarker;\r\n                }\r\n                break;\r\n        }\r\n        boatArray[count - 1] = S; // in the array the number of the boat is the index-1 and the value is its length\r\n    }\r\n\r\n\r\n    /**\r\n     * function for printing the game board\r\n     * @param gameBoard - the relevant game board to print\r\n     */\r\n    public static void printGameBoard(char[][] gameBoard) {\r\n        int ROWS = gameBoard.length; //num of rows in game board. exp: 11X11 -> ROWS = 11\r\n        int COLS = gameBoard[0].length;//num of columns in game board\r\n\r\n        // calculate number of digits in maximum row/col number\r\n        //int rowDigits = Integer.toString(ROWS - 1).length();\r\n        //int colDigits = Integer.toString(COLS - 1).length();\r\n\r\n        String numLastRow = Integer.toString(ROWS - 1); //\"10\" הפכתי לסטרינג כדי לאתחל משנה של אורך המספר\r\n        //int numLastCol = COLS - 1;\r\n        int len = numLastRow.length(); //2אורך מספר השורה האחרונה\r\n\r\n        //printing the spaces before col numbers\r\n        for (int i = 0; i < len + 1; i++) {\r\n            System.out.print(\" \");\r\n        }\r\n        // printing col numbers, without the last one (because of space after number)\r\n        for (int i = 0; i < COLS -1; i++) {\r\n            System.out.print(i +\" \");\r\n        }\r\n        // printing the last col number, and ln\r\n        System.out.println(COLS - 1);\r\n\r\n        // print column numbers\r\n        //System.out.print(\"  \");\r\n        //for (int j = 0; j < COLS; j++) {\r\n        // calculate number of spaces before col number\r\n        //int numSpaces = colDigits - Integer.toString(j).length() + 2;\r\n        //String spaces = new String(new char[numSpaces]).replace(\"\\0\", \" \");\r\n\r\n        //System.out.print(spaces + j);\r\n        //}\r\n        //System.out.println();\r\n        for (int i = 0; i < ROWS; i++) {\r\n            String new_i = Integer.toString(i); //to check the length of row number\r\n            int len_i = new_i.length();\r\n            int counter = checkingSpaces(ROWS); //got the number of digits of last row number\r\n            int space = counter - len_i; //spaces = ההפרש\r\n            for (int k = 0; k < space; k++) {\r\n                System.out.print(\" \");\r\n            }\r\n        System.out.print(i + \" \");\r\n        for (int j = 0; j < COLS; j++) {\r\n            System.out.print(gameBoard[i][j] + \" \");\r\n            }\r\n        System.out.println();\r\n        }\r\n            // print board\r\n            //for (int i = 0; i < ROWS; i++) {\r\n            // calculate number of spaces before row number\r\n            //int numSpaces = rowDigits - Integer.toString(i).length() + 2;\r\n            //String spaces = new String(new char[numSpaces]).replace(\"\\0\", \" \");\r\n\r\n            // print row number\r\n            //System.out.print(spaces + i);\r\n\r\n            //for (int j = 0; j < COLS; j++) {\r\n            //System.out.print(spaces + gameBoard[i][j]);\r\n            //}\r\n        System.out.println();\r\n        }\r\n\r\n    /**\r\n     * function for checking spaces\r\n     * @param ROWS - number of rows\r\n     * @return - length of longest digits\r\n     */\r\n    public static int checkingSpaces(int ROWS) {\r\n        ROWS -= 1;\r\n        int counter = 0;\r\n        while (((ROWS) % 10) != (ROWS)) {\r\n            counter += 1;\r\n            ROWS /= 10;\r\n        }\r\n        return counter + 1;\r\n    }\r\n\r\n\r\n\r\n // end of functions\r\n\r\n\r\n    public static void main(String[] args) throws IOException {\r\n        String path = args[0];\r\n        scanner = new Scanner(new File(path));\r\n        int numberOfGames = scanner.nextInt();\r\n        scanner.nextLine();\r\n\r\n        System.out.println(\"Total of \" + numberOfGames + \" games.\");\r\n\r\n        for (int i = 1; i <= numberOfGames; i++) {\r\n            scanner.nextLine();\r\n            int seed = scanner.nextInt();\r\n            rnd = new Random(seed);\r\n            scanner.nextLine();\r\n            System.out.println(\"Game number \" + i + \" starts.\");\r\n            battleshipGame();\r\n            System.out.println(\"Game number \" + i + \" is over.\");\r\n            System.out.println(\"------------------------------------------------------------\");\r\n        }\r\n        System.out.println(\"All games are over.\");\r\n    }\r\n}\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Main.java b/src/Main.java
--- a/src/Main.java	(revision 7e10fa82583d25294f79d8497a271ff1e8881f0e)
+++ b/src/Main.java	(date 1683299149765)
@@ -525,11 +525,11 @@
             System.out.print(" ");
         }
         // printing col numbers, without the last one (because of space after number)
-        for (int i = 0; i < COLS -1; i++) {
+        for (int i = 0; i < ROWS - 1; i++) {
             System.out.print(i +" ");
         }
         // printing the last col number, and ln
-        System.out.println(COLS - 1);
+        System.out.println(ROWS - 1);
 
         // print column numbers
         //System.out.print("  ");
@@ -551,8 +551,8 @@
             }
         System.out.print(i + " ");
         for (int j = 0; j < COLS; j++) {
-            System.out.print(gameBoard[i][j] + " ");
-            }
+                    System.out.print(gameBoard[i][j] + " ");
+                }
         System.out.println();
         }
             // print board
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"96a1b52d-5ab1-4ab7-9b35-bedbdb835a61\" name=\"Changes\" comment=\"מיושר!\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Main.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"SET_USER_NAME_GLOBALLY\" value=\"false\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2P5nfDrYDX4djELYC2G4DtHnZoD\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;configurable.group.editor&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"HW0\" />\r\n      <option name=\"PROGRAM_PARAMETERS\" value=\"&quot;tests/HW0_input.txt&quot;\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"96a1b52d-5ab1-4ab7-9b35-bedbdb835a61\" name=\"Changes\" comment=\"\" />\r\n      <created>1682755914723</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1682755914723</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"01052023 1313\">\r\n      <created>1682936076313</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682936076313</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"01052023 1313\">\r\n      <created>1682936805326</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682936805326</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"01052023 1329\">\r\n      <created>1682936948058</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682936948058</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"01052023 1330\">\r\n      <created>1682937010708</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682937010708</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"01052023 1407\">\r\n      <created>1682939274461</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682939274461</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"01052023 1438\">\r\n      <created>1682941104747</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682941104747</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"01052023 1438\">\r\n      <created>1682945906638</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682945906638</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"01052023 1848&#10;changed the gameboard to char[][]\">\r\n      <created>1682956133530</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682956133530</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"01052023 1952\">\r\n      <created>1682959947038</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682959947038</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"01052023 2045\">\r\n      <created>1682963163314</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682963163314</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"01052023 2021\">\r\n      <created>1682964121885</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682964121885</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"01052023 2110&#10;finished filling the player's board\">\r\n      <created>1682964649282</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682964649282</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"02052023 1215\">\r\n      <created>1683018971715</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683018971715</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"1309\">\r\n      <created>1683022203576</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683022203576</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"DIKAON\">\r\n      <created>1683027770421</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683027770421</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"02052023 17011&#10;commit a '#'\">\r\n      <created>1683036720192</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683036720192</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"02052023 1811&#10;adding functions for keeping track of boats\">\r\n      <created>1683040305671</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683040305671</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"02052023 1837&#10;adding functions for keeping track of boats\">\r\n      <created>1683041841231</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683041841231</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"03052023 1240&#10;plyer attack turn\">\r\n      <created>1683106871065</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683106871065</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"03052023 1250&#10;computer attack turn\">\r\n      <created>1683107443854</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683107443854</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"03052023 1254&#10;fixing error messages&#10;version 0.5 completed\">\r\n      <created>1683107678788</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683107678788</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"03052023 1343&#10;path to testim added&#10;version 0.5 completed\">\r\n      <created>1683110643110</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683110643110</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"03052023 2038&#10;changed ranges in conditions\">\r\n      <created>1683135541807</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683135541807</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"friday\">\r\n      <created>1683272294567</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683272294567</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"מיושר!\">\r\n      <created>1683293214698</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683293214698</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"26\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"01052023 1313\" />\r\n    <MESSAGE value=\"01052023 1329\" />\r\n    <MESSAGE value=\"01052023 1330\" />\r\n    <MESSAGE value=\"01052023 1407\" />\r\n    <MESSAGE value=\"01052023 1438\" />\r\n    <MESSAGE value=\"01052023 1848&#10;changed the gameboard to char[][]\" />\r\n    <MESSAGE value=\"01052023 1952\" />\r\n    <MESSAGE value=\"01052023 2045\" />\r\n    <MESSAGE value=\"01052023 2021\" />\r\n    <MESSAGE value=\"01052023 2110&#10;finished filling the player's board\" />\r\n    <MESSAGE value=\"02052023 1215\" />\r\n    <MESSAGE value=\"1309\" />\r\n    <MESSAGE value=\"DIKAON\" />\r\n    <MESSAGE value=\"02052023 17011&#10;commit a '#'\" />\r\n    <MESSAGE value=\"02052023 1811&#10;adding functions for keeping track of boats\" />\r\n    <MESSAGE value=\"02052023 1837&#10;adding functions for keeping track of boats\" />\r\n    <MESSAGE value=\"03052023 1240&#10;plyer attack turn\" />\r\n    <MESSAGE value=\"03052023 1250&#10;computer attack turn\" />\r\n    <MESSAGE value=\"03052023 1254&#10;fixing error messages&#10;version 0.5 completed\" />\r\n    <MESSAGE value=\"03052023 1343&#10;path to testim added&#10;version 0.5 completed\" />\r\n    <MESSAGE value=\"03052023 2038&#10;changed ranges in conditions\" />\r\n    <MESSAGE value=\"friday\" />\r\n    <MESSAGE value=\"מיושר!\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"מיושר!\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.ArrayIndexOutOfBoundsException\" package=\"java.lang\" />\r\n          <option name=\"timeStamp\" value=\"3\" />\r\n        </breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 7e10fa82583d25294f79d8497a271ff1e8881f0e)
+++ b/.idea/workspace.xml	(date 1683299149977)
@@ -4,7 +4,7 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="96a1b52d-5ab1-4ab7-9b35-bedbdb835a61" name="Changes" comment="מיושר!">
+    <list default="true" id="96a1b52d-5ab1-4ab7-9b35-bedbdb835a61" name="Changes" comment="04052023 1627&#10;fixed conditions to give a solution to negative input&#10;&#10;running until end of game 5">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Main.java" afterDir="false" />
     </list>
@@ -223,21 +223,49 @@
       <option name="project" value="LOCAL" />
       <updated>1683135541807</updated>
     </task>
-    <task id="LOCAL-00024" summary="friday">
-      <created>1683272294567</created>
+    <task id="LOCAL-00024" summary="04052023 1405&#10;fixes in the attacking section - making it into a do-while loop">
+      <created>1683198324153</created>
       <option name="number" value="00024" />
       <option name="presentableId" value="LOCAL-00024" />
       <option name="project" value="LOCAL" />
-      <updated>1683272294567</updated>
+      <updated>1683198324153</updated>
     </task>
-    <task id="LOCAL-00025" summary="מיושר!">
-      <created>1683293214698</created>
+    <task id="LOCAL-00025" summary="04052023 1505&#10;the pointers are conspiring against us&#10;&#10;made changes in boat building way">
+      <created>1683201981847</created>
       <option name="number" value="00025" />
       <option name="presentableId" value="LOCAL-00025" />
       <option name="project" value="LOCAL" />
-      <updated>1683293214698</updated>
+      <updated>1683201981847</updated>
+    </task>
+    <task id="LOCAL-00026" summary="04052023 1518&#10;more fixes in the gameplay-&#10;now game is working okay for games 1,2 and breaks at the 3rd">
+      <created>1683202761344</created>
+      <option name="number" value="00026" />
+      <option name="presentableId" value="LOCAL-00026" />
+      <option name="project" value="LOCAL" />
+      <updated>1683202761344</updated>
+    </task>
+    <task id="LOCAL-00027" summary="04052023 1559&#10;filling boats on board conditions">
+      <created>1683205160789</created>
+      <option name="number" value="00027" />
+      <option name="presentableId" value="LOCAL-00027" />
+      <option name="project" value="LOCAL" />
+      <updated>1683205160789</updated>
+    </task>
+    <task id="LOCAL-00028" summary="04052023 1617&#10;fixed all switch-case with breaks">
+      <created>1683206253739</created>
+      <option name="number" value="00028" />
+      <option name="presentableId" value="LOCAL-00028" />
+      <option name="project" value="LOCAL" />
+      <updated>1683206253739</updated>
+    </task>
+    <task id="LOCAL-00029" summary="04052023 1627&#10;fixed conditions to give a solution to negative input&#10;&#10;running until end of game 5">
+      <created>1683206920872</created>
+      <option name="number" value="00029" />
+      <option name="presentableId" value="LOCAL-00029" />
+      <option name="project" value="LOCAL" />
+      <updated>1683206920872</updated>
     </task>
-    <option name="localTasksCounter" value="26" />
+    <option name="localTasksCounter" value="30" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -252,8 +280,6 @@
     </option>
   </component>
   <component name="VcsManagerConfiguration">
-    <MESSAGE value="01052023 1313" />
-    <MESSAGE value="01052023 1329" />
     <MESSAGE value="01052023 1330" />
     <MESSAGE value="01052023 1407" />
     <MESSAGE value="01052023 1438" />
@@ -273,9 +299,13 @@
     <MESSAGE value="03052023 1254&#10;fixing error messages&#10;version 0.5 completed" />
     <MESSAGE value="03052023 1343&#10;path to testim added&#10;version 0.5 completed" />
     <MESSAGE value="03052023 2038&#10;changed ranges in conditions" />
-    <MESSAGE value="friday" />
-    <MESSAGE value="מיושר!" />
-    <option name="LAST_COMMIT_MESSAGE" value="מיושר!" />
+    <MESSAGE value="04052023 1405&#10;fixes in the attacking section - making it into a do-while loop" />
+    <MESSAGE value="04052023 1505&#10;the pointers are conspiring against us&#10;&#10;made changes in boat building way" />
+    <MESSAGE value="04052023 1518&#10;more fixes in the gameplay-&#10;now game is working okay for games 1,2 and breaks at the 3rd" />
+    <MESSAGE value="04052023 1559&#10;filling boats on board conditions" />
+    <MESSAGE value="04052023 1617&#10;fixed all switch-case with breaks" />
+    <MESSAGE value="04052023 1627&#10;fixed conditions to give a solution to negative input&#10;&#10;running until end of game 5" />
+    <option name="LAST_COMMIT_MESSAGE" value="04052023 1627&#10;fixed conditions to give a solution to negative input&#10;&#10;running until end of game 5" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
